@use '@css-styles/common' as vars;

@mixin css-common
{
    //############## MISC ##############

    .semi-tight
    {
        font-size: 0.9em;
    }

    .tight
    {
        font-size: 0.8em;
    }

    hr
    {
        margin-bottom: var(--size-xs);
        margin-top: var(--size-xs);
        border: none;
        border-top-width: 1px;
        border-top-style: solid;
        border-top-color: var(--separator-foreground);
    }

    .text-selection
    {
        user-select: text;
    }

    .line-height-default
    {
        line-height: 1em;
    }

    //############## CORNERS ##############
    
    .border-round
    {
        border-radius: var(--border-radius);
    }

    .top-border-round
    {
        border-top-left-radius: var(--border-radius);
        border-top-right-radius: var(--border-radius);
    }

    .bottom-border-round
    {
        border-bottom-left-radius: var(--border-radius);
        border-bottom-right-radius: var(--border-radius);
    }

    .left-border-round
    {
        border-top-left-radius: var(--border-radius);
        border-bottom-left-radius: var(--border-radius);
    }

    .right-border-round
    {
        border-top-right-radius: var(--border-radius);
        border-bottom-right-radius: var(--border-radius);
    }

    .top-left-border-round
    {
        border-top-left-radius: var(--border-radius);
    }

    .bottom-left-border-round
    {
        border-bottom-left-radius: var(--border-radius);
    }

    .top-right-border-round
    {
        border-top-right-radius: var(--border-radius);
    }

    .bottom-right-border-round
    {
        border-bottom-right-radius: var(--border-radius);
    }

    //############## TEXTS ##############

    .extra-extra-small-text
    {
        font-size: var(--size-font-xxs);
    }

    .extra-small-text
    {
        font-size: var(--size-font-xs);
    }
    
    .small-text
    {
        font-size: var(--size-font-sm);
    }

    .medium-text
    {
        font-size: var(--size-font-md);
    }

    .large-text
    {
        font-size: var(--size-font-lg);
    }

    .extra-large-text
    {
        font-size: var(--size-font-xl);
    }

    .extra-extra-large-text
    {
        font-size: var(--size-font-xxl);
    }

    .extra-extra-extra-large-text
    {
        font-size: var(--size-font-xxxl);
    }

    //############## TEXTS ##############

    .text-primary
    {
        color: var(--text-primary-foreground);
        background-color: var(--text-primary-background);
    }

    .text-danger,
    .text-error
    {
        color: var(--text-danger-foreground);
        background-color: var(--text-danger-background);
    }

    .text-warning
    {
        color: var(--text-warning-foreground);
        background-color: var(--text-warning-background);
    }

    .text-success
    {
        color: var(--text-success-foreground);
        background-color: var(--text-success-background);
    }

    .text-info
    {
        color: var(--text-info-foreground);
        background-color: var(--text-info-background);
    }

    @include generate-margin-padding(padding, vars.$sizes);
    @include generate-margin-padding(margin, vars.$sizes);
    @include generate-column-row-gaps(column, vars.$sizes);
    @include generate-column-row-gaps(row, vars.$sizes);
}

@mixin generate-margin-padding($type, $sizes)
{
    @each $sizeType, $size in $sizes
    {
        .#{$type}-#{$sizeType}
        {
            #{$type}: var(--size-#{$size});
        }

        .#{$type}-right-#{$sizeType}
        {
            #{$type}-right: var(--size-#{$size});
        }

        .#{$type}-left-#{$sizeType}
        {
            #{$type}-left: var(--size-#{$size});
        }

        .#{$type}-top-#{$sizeType}
        {
            #{$type}-top: var(--size-#{$size});
        }

        .#{$type}-bottom-#{$sizeType}
        {
            #{$type}-bottom: var(--size-#{$size});
        }

        .#{$type}-horizontal-#{$sizeType}
        {
            #{$type}-left: var(--size-#{$size});
            #{$type}-right: var(--size-#{$size});
        }

        .#{$type}-vertical-#{$sizeType}
        {
            #{$type}-top: var(--size-#{$size});
            #{$type}-bottom: var(--size-#{$size});
        }
    }
}

@mixin generate-column-row-gaps($type, $sizes)
{
    @each $sizeType, $size in $sizes
    {
        .#{$type}-gap-#{$sizeType}
        {
            #{$type}-gap: var(--size-#{$size});
        }
    }
}