@mixin css-buttons
{
    //############## BUTTONS SPACING ##############

    .buttons-margin
    {
        margin-right: var(--button-spaceBetween);
    }

    .buttons-gap
    {
        column-gap: var(--buttons-columnGap);
        row-gap: var(--buttons-rowGap);
    }

    //############## BUTTONS ##############

    %btn-base
    {
        letter-spacing: var(--button-letterSpacing);
        background-image: none;
        text-shadow: var(--button-textShadow);
        box-shadow: var(--button-boxShadow);
        text-transform: var(--button-textTransformation);
        transition: var(--button-transition);
        border: var(--button-border);
        border-radius: var(--button-borderRadius);
        padding: var(--button-padding);
        font-family: var(--font-family);
        cursor: pointer;
        white-space: nowrap;
        font-size: var(--button-fontSize);
        font-weight: var(--button-fontWeight);
        min-width: var(--button-minWidth);
        position: relative;
    }

    .btn
    {
        @extend %btn-base;

        &.disabled,
        &:disabled
        {
            opacity: 0.75;
            cursor: not-allowed;
        }

        &>span
        {
            position: relative;
        }

        span[class^="fa"],
        span[class^="fas"],
        span[class^="fab"],
        span[class^="glyphicon"]
        {
            margin-right: var(--size-xs);
        }
    }

    multi-button.btn
    {
        padding: 0;

        button
        {
            @extend %btn-base;
        }
    }

    .btn-icon
    {
        color: var(--button-icon-foreground);
        border: none;
        background-color: transparent;
        cursor: pointer;
        user-select: none;
        -webkit-user-select: none;

        &:hover,
        &:focus
        {
            color: var(--button-icon-hover-foreground);

            .double-right-icon
            {
                div
                {
                    border-color: var(--button-icon-hover-foreground);
                }
            }
        }

        &:active
        {
            color: var(--button-icon-hover-foreground);
            transform: scale(105%);
        }
    }

    @include generate-button(('primary', 'secondary', 'info', 'default', 'success', 'warning', 'danger', 'error'));
}

@mixin generate-button($buttonNames)
{
    @each $buttonName in $buttonNames
    {
        .btn-#{$buttonName}
        {
            &::before 
            {
                content: "";
                position: absolute;
                transition: var(--button-transition);
                top: 0; left: 0;
                width: 100%; height: 100%;
                background-color: var(--button-#{$buttonName}-background);
                background-image: var(--button-#{$buttonName}-backgroundImage);
                border-radius: var(--button-borderRadius);
            }

            &:hover:not(:is(.disabled, :disabled))
            {
                &::before 
                {
                    filter: var(--button-#{$buttonName}-hover-filter);
                    background-image: var(--button-#{$buttonName}-hover-backgroundImage);
                }
            }

            &:focus:not(:is(.disabled, :disabled))
            {
                &::before 
                {
                    &::before 
                    {
                        filter: var(--button-#{$buttonName}-focus-filter);
                        background-image: var(--button-#{$buttonName}-focus-backgroundImage);
                    }
                }
            }

            &:active:not(:is(.disabled, :disabled))
            {
                &::before 
                {
                    filter: var(--button-#{$buttonName}-active-filter);
                    background-image: var(--button-#{$buttonName}-active-backgroundImage);
                }

                &>span[class^="fa"],
                &>span[class^="fas"],
                &>span[class^="glyphicon"]
                {
                    filter: brightness(70%);
                }
            }

            color: var(--button-#{$buttonName}-foreground);

            &>span
            {
                color: var(--button-#{$buttonName}-foreground);
            }

            &>span[class^="fa"],
            &>span[class^="fas"],
            &>span[class^="glyphicon"]
            {
                transition: var(--button-transition);
                color: var(--button-#{$buttonName}-background);
                filter: brightness(80%);
            }
        }
    }
}